name: Client Deployment

on:
  push:
    branches: [main]
    paths:
      # Now triggers on any change in the root of the repository or the workflow file itself
      - "**" # This means any file anywhere in the repo
      - ".github/workflows/frontend-deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies with legacy peer deps
        run: npm ci # Removed 'cd BELLA-IMAGINE-CLIENT'

      - name: Build
        env:
          VITE_ADMIN_API_URI: ${{ secrets.VITE_ADMIN_API_URI }}
          VITE_CLIENT_API_URI: ${{ secrets.VITE_CLIENT_API_URI }}
          VITE_VENDOR_API_URI: ${{ secrets.VITE_VENDOR_API_URI }}
          VITE_AUTH_API_URI: ${{ secrets.VITE_AUTH_API_URI }}
          VITE_CHAT_API_URL: ${{ secrets.VITE_CHAT_API_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_STRIPE_PUBLIC_KEY: ${{ secrets.VITE_STRIPE_PUBLIC_KEY }}
          VITE_GOOGLE_MAP_API_KEY: ${{ secrets.VITE_GOOGLE_MAP_API_KEY }}
        run: npm run build # Removed 'cd BELLA-IMAGINE-CLIENT'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          # Assuming 'npm run build' outputs to a 'dist' folder directly in the repo root
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} --delete --cache-control "public, max-age=31536000" --exclude "index.html" --exclude "404.html" # Assets
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} --exclude "*" --include "index.html" --include "404.html" --cache-control "no-cache, no-store, must-revalidate" # HTML files

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"